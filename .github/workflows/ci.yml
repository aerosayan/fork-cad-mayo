name: CI

on: [push]

jobs:
    ci:
        strategy:
            fail-fast: false
            matrix:
                os: [windows-latest, ubuntu-latest, macos-latest]
                occ_version: [package]
                include:
                    - os: windows-latest
                      occ_version: 7.4.0
                    - os: windows-latest
                      occ_version: 7.5.0
                    - os: windows-latest
                      occ_version: 7.6.0
                exclude:
                    - os: windows-latest
                      occ_version: package

        runs-on: ${{matrix.os}}

        steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
              path: 'source'
              fetch-depth: 0
              lfs: 'false'

        - name: Cache Qt
          id: cache-qt
          uses: actions/cache@v1
          with:
              path: ../Qt
              key: ${{ runner.os }}-QtCache

        - name: Install Qt
          uses: jurplel/install-qt-action@v2
          with:
              cached: ${{ steps.cache-qt.outputs.cache-hit }}

        - name: Download OpenCascade[Windows]
          if: startsWith(matrix.os, 'windows')
          uses: carlosperate/download-file-action@v2
          with:
              file-url: 'https://www.fougue.pro/share/bin/OpenCASCADE-${{matrix.occ_version}}-vc14-64.rar'

        - name: Extract OpenCascade[Windows]
          if: startsWith(matrix.os, 'windows')
          uses: edgarrc/action-7z@v1
          with:
              args: 7z x OpenCASCADE-${{matrix.occ_version}}-vc14-64.rar

        - name: Install OpenCascade[Ubuntu]
          if: startsWith(matrix.os, 'ubuntu')
          run: |
              sudo apt-get -y install libocct-data-exchange-dev libocct-draw-dev
              GH_CASCADE_INC_DIR=`dpkg -L libocct-foundation-dev | grep -i "Standard_Version.hxx" | sed "s/\/Standard_Version.hxx//i"`
              GH_CASCADE_LIB_DIR=`dpkg -L libocct-foundation-dev | grep -i "libTKernel.so" | sed "s/\/libTKernel.so//i"`
              echo "GH_CASCADE_INC_DIR=$GH_CASCADE_INC_DIR" >> $GITHUB_ENV
              echo "GH_CASCADE_LIB_DIR=$GH_CASCADE_LIB_DIR" >> $GITHUB_ENV

        - name: Install OpenCascade[macOS]
          if: startsWith(matrix.os, 'macos')
          run: |
              brew install opencascade
              GH_CASCADE_BASE_DIR=`brew info opencascade | grep -E -i --only-matching --max-count=1 "^(/[a-z\.\-_0-9]+)+"`
              echo "GH_CASCADE_INC_DIR=$GH_CASCADE_BASE_DIR/include/opencascade" >> $GITHUB_ENV
              echo "GH_CASCADE_LIB_DIR=$GH_CASCADE_BASE_DIR/lib" >> $GITHUB_ENV

        - name: Get count of CPU cores
          uses: SimenB/github-actions-cpu-cores@v1
          id: cpu-cores

        - name: Create Build folder
          run: mkdir ${{github.workspace}}/build


        - name: QMake[Ubuntu & macOS]
          if: !startsWith(matrix.os, 'windows')
          working-directory: ${{github.workspace}}/build
          run: |
              echo CASCADE_INC_DIR=${{env.GH_CASCADE_INC_DIR}}
              echo CASCADE_LIB_DIR=${{env.GH_CASCADE_LIB_DIR}}
              [ ! -d $CASCADE_INC_DIR ] && echo "ERROR: OpenCascade include dir doesn't exist"
              [ ! -d $CASCADE_LIB_DIR ] && echo "ERROR: OpenCascade lib dir doesn't exist"
              qmake ../source  CASCADE_INC_DIR=${{env.GH_CASCADE_INC_DIR}}  CASCADE_LIB_DIR=${{env.GH_CASCADE_LIB_DIR}}  CONFIG+=withtests

        - name: Build[Windows]
          if: startsWith(matrix.os, 'windows')
          working-directory: ${{github.workspace}}/build
          run: |
              msbuild mayo.vcxproj -t:rebuild -property:Configuration=Release

        - name: Build[Ubuntu & macOS]
          if: !startsWith(matrix.os, 'windows')
          working-directory: ${{github.workspace}}/build
          run: |
              make -j${{steps.cpu-cores.outputs.count}}

        - name: Execute Unit Tests[Windows]
          if: startsWith(matrix.os, 'windows')
          working-directory: ${{github.workspace}}/build
          run: |
              release\mayo.exe --runtests

        - name: Execute Unit Tests[macOS]
          if: startsWith(matrix.os, 'macos')
          working-directory: ${{github.workspace}}/build
          run: |
              ./mayo.app/Contents/MacOS/mayo --runtests
